"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = require("dotenv");
const inversify_1 = require("inversify");
const types_1 = require("./types");
const app_1 = require("./app");
require("reflect-metadata");
const main_page_controller_1 = require("./handlebars-controllers/main-page/main.page.controller");
const product_page_controller_1 = require("./handlebars-controllers/product-page/product.page.controller");
const review_controller_1 = require("./items/reviews/review.controller");
const search_page_controller_1 = require("./handlebars-controllers/search-product/search.page.controller");
const register_page_controller_1 = require("./handlebars-controllers/register-page/register.page.controller");
const login_page_controller_1 = require("./handlebars-controllers/login-page/login.page.controller");
const mongoose_service_1 = require("./database/mongoose.service");
const users_service_1 = require("./users/users.service");
const users_repository_1 = require("./users/users.repository");
const user_page_controller_1 = require("./handlebars-controllers/user-page/user.page.controller");
const user_page_orders_controller_1 = require("./handlebars-controllers/user-page-orders/user.page.orders.controller");
const user_page_saved_controller_1 = require("./handlebars-controllers/user-page-saved/user.page.saved.controller");
const order_page_controller_1 = require("./handlebars-controllers/order-page/order.page.controller");
const items_service_1 = require("./items/items.service");
const items_repository_1 = require("./items/items.repository");
const item_controller_1 = require("./items/item.controller");
const review_service_1 = require("./items/reviews/review.service");
const order_page_service_1 = require("./handlebars-controllers/order-page/order.page.service");
const check_auth_middleware_1 = require("./common/check.auth.middleware");
const user_page_saved_service_1 = require("./handlebars-controllers/user-page-saved/user.page.saved.service");
const order_repository_1 = require("./orders/order.repository");
const order_service_1 = require("./orders/order.service");
(0, dotenv_1.config)();
const myContainer = new inversify_1.Container();
myContainer.bind(types_1.TYPES.IMainPageController).to(main_page_controller_1.MainPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.IProductPageController).to(product_page_controller_1.ProductPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.IReviewController).to(review_controller_1.ReviewController).inSingletonScope();
myContainer.bind(types_1.TYPES.ISearchPageController).to(search_page_controller_1.SearchPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.IRegisterPageController).to(register_page_controller_1.RegisterPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.ILoginPageController).to(login_page_controller_1.LoginPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.IMongooseService).to(mongoose_service_1.MongooseService).inSingletonScope();
myContainer.bind(types_1.TYPES.IUsersService).to(users_service_1.UsersService).inSingletonScope();
myContainer.bind(types_1.TYPES.IUsersRepository).to(users_repository_1.UsersRepository).inSingletonScope();
myContainer.bind(types_1.TYPES.IUserPageController).to(user_page_controller_1.UserPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.IUserPageOrdersController).to(user_page_orders_controller_1.UserPageOrdersController).inSingletonScope();
myContainer.bind(types_1.TYPES.IUserPageSavedController).to(user_page_saved_controller_1.UserPageSavedController).inSingletonScope();
myContainer.bind(types_1.TYPES.IOrderPageController).to(order_page_controller_1.OrderPageController).inSingletonScope();
myContainer.bind(types_1.TYPES.IItemsService).to(items_service_1.ItemsService).inSingletonScope();
myContainer.bind(types_1.TYPES.IItemsRepository).to(items_repository_1.ItemsRepository).inSingletonScope();
myContainer.bind(types_1.TYPES.IItemController).to(item_controller_1.ItemController).inSingletonScope();
myContainer.bind(types_1.TYPES.IReviewService).to(review_service_1.ReviewService).inSingletonScope();
myContainer.bind(types_1.TYPES.IOrderPageService).to(order_page_service_1.OrderPageService).inSingletonScope();
myContainer.bind(types_1.TYPES.CheckAuthMiddleware).to(check_auth_middleware_1.CheckAuthMiddleware).inSingletonScope();
myContainer.bind(types_1.TYPES.IUserPageSavedService).to(user_page_saved_service_1.UserPageSavedService).inSingletonScope();
myContainer.bind(types_1.TYPES.IOrderRepository).to(order_repository_1.OrderRepository).inSingletonScope();
myContainer.bind(types_1.TYPES.IOrderService).to(order_service_1.OrderService).inSingletonScope();
myContainer.bind(types_1.TYPES.App).to(app_1.App).inSingletonScope();
const app = myContainer.get(types_1.TYPES.App);
app.init();
//# sourceMappingURL=server.js.map